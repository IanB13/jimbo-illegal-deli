{
    "swagger": "2.0",
    "info": {
      "version": "0.0.1",
      "title": "Jimbo's Ilegal Deli",
      "description": "Jimboâ€™s Illegal Deli (JID) is an online marketplace that brings together suppliers of black market items such as ivory and irresponsibly-sourced caviar and not-very-morally-good customers. JID has an exclusive inventory and a loyal customer base."
    },
    "basePath": "/",

    "tags" : [
      {"name": "JID", 
      "description": "Get customer information"
      }
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/customers": {
         "get": {
            "tags": ["Customers"],
            "description": "Gets all Customers",
            "operationId": "GET customers",
            "produces": [
              "application/json"
            ],
            "responses": {
              "200": {
                "description": "Sent customers"
              }
            }
          }
      },
      "/customers/{id}": {
          "get":{
            "tags":["Customers"],
            "description":"Gets an individual customer based on MongoDB ID",
            "operationId":"GET customers by id",
            "produces": [
              "application/json"
            ],
            "parameters":[
              {
                "name": "id",
                "in": "path",
                "description": "MongoDB ID to find customer by",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "An individual customer is returned",
                "schema":{
                  "$ref":"#/definitions/customer"
                }
              }
            }
          }
        },
        "/customers/distance/helicopter": {
          "get":{
            "tags":["Customers"],
            "description":"Gets distance between customer and inputed coordinate point via helicopter",
            "operationId":"GET distance helicopter",
            "produces": [
              "application/json"
            ],
            "parameters":[
                {
                  "name": "id",
                  "in": "query",
                  "description": "customer ID",
                  "required": true,
                  "type": "string",
                  "example": "5f75e6d1fc77d63950276a97"
                },
                {
                  "name": "latitude",
                  "in": "query",
                  "description": "Lattitude of start point",
                  "required": true,
                  "type": "number"
                },
                {
                  "name": "longitude",
                  "in": "query",
                  "description": "Longitude of start point",
                  "required": true,
                  "type": "number"
                }
              ],
            "responses": {
              "200": {
                "description": "delete response",
                "schema":{
                  "$ref":"#/definitions/distance"
                }
              }
            }
          }
        },
        "/customers/distance/bike": {
          "get":{
            "tags":["Customers"],
            "description":"Gets distance between customer and inputed coordinate point via bicycle",
            "operationId":"GET distance bike",
            "produces": [
              "application/json"
            ],
            "parameters":[
                {
                  "name": "id",
                  "in": "query",
                  "description": "customer ID",
                  "required": true,
                  "type": "string",
                  "example": "5f75e6d1fc77d63950276a97"
                },
                {
                  "name": "latitude",
                  "in": "query",
                  "description": "Lattitude of start point",
                  "required": true,
                  "type": "number"
                },
                {
                  "name": "longitude",
                  "in": "query",
                  "description": "Longitude of start point",
                  "required": true,
                  "type": "number"
                }
              ],
            "responses": {
              "200": {
                "description": "delete response",
                "schema":{
                  "$ref":"#/definitions/distance"
                }
              }
            }
          }
        },
        "/inventory": {
          "get":{
            "tags":["Inventory"],
            "description":"Gets all inventory items",
            "operationId":"GET inventory",
            "produces": [
              "application/json"
            ],
            "responses": {
              "200": {
                "description": "All inventory Items"
              }
            }
          },
          "post":{
            "tags":["Inventory"],
            "description":"Add a new Item to the Inventory",
            "operationId":"post",
            "produces": [
              "application/json"
            ],
            "parameters":[
                {
                  "name": "someVariable",
                  "in": "path",
                  "description": "ID to delete",
                  "required": true,
                  "type": "string"
                }
              ],
            "responses": {
              "200": {
                "description": "delete response",
                "schema":{
                  "$ref":"#/definitions/deleteRes"
                }
              }
            }
          }
        },
        "/inventory/order": {
          "put":{
            "tags":["Inventory"],
            "description":"",
            "operationId":"PUT order",
            "produces": [
              "application/json"
            ],
            "parameters":[
                {
                  "name": "someVariable",
                  "in": "path",
                  "description": "ID to delete",
                  "required": true,
                  "type": "string"
                }
              ],
            "responses": {
              "200": {
                "description": "delete response",
                "schema":{
                  "$ref":"#/definitions/deleteRes"
                }
              }
            }
          }
        },
        "/inventory/currency": {
          "put":{
            "tags":["Inventory"],
            "description":"Updates currency in database to provided code, if an item of id is provided it will only update the selected inv item. Id or item can be provided, not both",
            "operationId":"PUT Currency",
            "produces": [
              "application/json"
            ],
            "parameters":[
                {
                  "name": "body",
                  "in": "body",
                  "description": " code id item",
                  "required": true,
                  "type": "string"
                }
              ],
            "responses": {
              "200": {
                "description": "delete response",
                "schema":{
                  "$ref":"#/definitions/deleteRes"
                }
              }
            }
          }
        },
        "/events": {
          "get":{
            "tags":["Events"],
            "description":"Get all events in database",
            "operationId":"get",
            "produces": [
              "application/json"
            ],
            "responses": {
              "200": {
                "description": "All events"
              }
            }
          }
        }
    },







    "definitions": {
      "distance": {
        "properties": {
          "miles": {
            "type": "number",
            "example": 400
          },
          "meters": {
            "type": "number",
            "example": 643738
          }
        }
      },
      "customer": {
        "properties": {
          "first_name": {
            "type": "string",
            "example": "Jamaal"
          },
          "last_name": {
            "type": "string",
            "example": "Egre"
          },
          "email": {
            "type": "string",
            "example": "jegred@redcross.org"
          }
        }
      }
    }
  }